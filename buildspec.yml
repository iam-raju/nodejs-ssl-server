version: 0.2

env:
  variables:
    APP_NAME: "nodejs-ssl-server"
    ENV: "in-main-dev"
    ECR_REPO_URI: "845091770108.dkr.ecr.ap-south-1.amazonaws.com/cicd-new-repo"
    EC2_HOST: "3.110.191.221"
    EC2_USER: "ec2-user"
    CONTAINER_NAME: "my-app-container"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REPO_URI
      - |
        echo Generating image tag...
        GIT_SHA=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
        BUILD_TIME=$(date +%Y%m%d-%H%M)
        IMAGE_TAG="${APP_NAME}-${ENV}-${GIT_SHA}-${BUILD_TIME}"
        IMAGE_URI="${ECR_REPO_URI}:${IMAGE_TAG}"
        echo "Tag: $IMAGE_TAG"


  build:
    commands:
      - echo Building Docker image...
      - docker build -t $IMAGE_URI .
      - docker tag $IMAGE_URI $ECR_REPO_URI:latest
      - echo Pushing image with tag: $IMAGE_TAG
      - docker push $IMAGE_URI
      - docker push $ECR_REPO_URI:latest

  post_build:
    commands:
      - echo "$EC2_SSH_KEY" | base64 -d > ec2_key.pem
      - chmod 400 ec2_key.pem
      - |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << EOF
          echo Installing Docker and AWS CLI if needed...
          sudo yum update -y
          sudo yum install -y docker awscli
          sudo service docker start
          sudo usermod -aG docker \$USER
          newgrp docker

          echo Logging in to ECR...
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REPO_URI

          echo Stopping and removing old container if exists...
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true

          echo Pulling and running new image...
          docker pull $IMAGE_URI
          docker run -d --name $CONTAINER_NAME -p 80:3000 $IMAGE_URI
        EOF
